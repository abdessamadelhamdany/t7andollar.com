generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  image     String?
  email     String   @unique
  password  String
  role      Role     @default(USER)
  posts     Post[]
  profile   Profile?
  tokens    Token[]
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Token {
  id     Int    @id @default(autoincrement())
  token  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Post {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String?
  slug        String?
  excerpt     String?
  thumbnail   String?
  body        String?
  published   Boolean    @default(false)
  author      User       @relation(fields: [authorId], references: [id])
  authorId    Int
  readingTime String?
  keywords    String[]
  comments    Comment[]
  categories  Category[] @relation(references: [id])
  tags        Tag[]      @relation(references: [id])
}

model Comment {
  id      Int    @id @default(autoincrement())
  title   String
  content String
  Post    Post?  @relation(fields: [postId], references: [id])
  postId  Int?
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation(references: [id])
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation(references: [id])
}
